import numpy as np
from scipy import stats


def independent_t_test(data1, data2):
    """
    Perform independent t-test for each metric between two sets of data.

    Args:
    - data1: Dictionary with means and standard deviations for group 1
    - data2: Dictionary with means and standard deviations for group 2

    Returns:
    - t_values: Dictionary containing t-statistic for each metric
    - p_values: Dictionary containing p-value for each metric
    """
    t_values = {}
    p_values = {}

    for metric in data1:
        # Extract mean and std dev for the metric for each group
        mean1, std_dev1 = data1[metric]
        mean2, std_dev2 = data2[metric]

        # Perform t-test assuming unequal variance (Welch's T-test)
        t_stat, p_value = stats.ttest_ind_from_stats(mean1, std_dev1, 50, mean2, std_dev2, 50,
                                                     equal_var=False)

        # Store t-value and p-value for the metric
        t_values[metric] = t_stat
        p_values[metric] = p_value

    return t_values, p_values


# Data for "Common" category
common_means = {
    'NDCG@10': (0.247418, 0.08223010285777343),
    'NDCG@50': (0.30531800000000003, 0.07290555243601134),
    'NDCG@100': (0.320806, 0.07069678001153942),
    'NDCG@200': (0.327842, 0.0659246932188539),
    'NDCG@1000': (0.343536, 0.06508740295940528),
    'MAP@10': (0.201502, 0.07806160500527771),
    'MAP@50': (0.21424000000000004, 0.07591582970632674),
    'MAP@100': (0.21561399999999997, 0.0757800381630941),
    'MAP@200': (0.21592799999999998, 0.07556708209266784),
    'MAP@1000': (0.21625199999999997, 0.07555050692086718),
    'Recall@10': (0.396, 0.1148216007552586),
    'Recall@50': (0.6539999999999999, 0.09024411338142782),
    'Recall@100': (0.7473339999999999, 0.07081631326184668),
    'Recall@200': (0.799334, 0.03900941199249226),
    'Recall@1000': (0.9359999999999999, 0.01496662954709573)
}

# Data for "Long Tail" category
long_tail_means = {
    'NDCG@10': (0.233176, 0.04988124721776712),
    'NDCG@50': (0.27832599999999996, 0.04757291355382808),
    'NDCG@100': (0.29737800000000003, 0.04184500514995786),
    'NDCG@200': (0.30705000000000005, 0.040343383100577966),
    'NDCG@1000': (0.32256399999999996, 0.0404360896230088),
    'MAP@10': (0.17853, 0.046760254490325434),
    'MAP@50': (0.18832, 0.04681331776321777),
    'MAP@100': (0.18996999999999997, 0.046347320526649645),
    'MAP@200': (0.19052799999999998, 0.04631437331973736),
    'MAP@1000': (0.190934, 0.046306676235722204),
    'Recall@10': (0.4, 0.061644140029689785),
    'Recall@50': (0.599666, 0.04313265843882104),
    'Recall@100': (0.717666, 0.022400228213123173),
    'Recall@200': (0.784, 0.019595917942265444),
    'Recall@1000': (0.9120000000000001, 0.023151673805580444)
}
common_means_updated = {
    'NDCG@10': (0.195548, 0.036183886690072414),
    'NDCG@50': (0.24974400000000002, 0.046711580405719516),
    'NDCG@100': (0.26903599999999994, 0.04621925728524853),
    'NDCG@200': (0.27450600000000003, 0.04546118810589974),
    'NDCG@1000': (0.28962, 0.03898312711930638),
    'MAP@10': (0.152794, 0.03494562267294718),
    'MAP@50': (0.165444, 0.037497019934922826),
    'MAP@100': (0.167256, 0.03745780644939049),
    'MAP@200': (0.167532, 0.037400822130001364),
    'MAP@1000': (0.167916, 0.037223838383487536),
    'Recall@10': (0.32466599999999995, 0.061485658685582936),
    'Recall@50': (0.5599999999999999, 0.09316651759081693),
    'Recall@100': (0.6759999999999999, 0.09002221947941517),
    'Recall@200': (0.7140000000000001, 0.08777243302996679),
    'Recall@1000': (0.842, 0.03709447398198282)
}

# Data for "Long Tail" category (Updated)
long_tail_means_updated = {
    'NDCG@10': (0.17701, 0.011780665516005458),
    'NDCG@50': (0.218462, 0.022492784976520807),
    'NDCG@100': (0.238644, 0.01777935611882499),
    'NDCG@200': (0.24788800000000002, 0.018383936901545328),
    'NDCG@1000': (0.262794, 0.016458144002286533),
    'MAP@10': (0.13051, 0.017122599101771902),
    'MAP@50': (0.139264, 0.019954353509948654),
    'MAP@100': (0.141106, 0.019565997648982786),
    'MAP@200': (0.141596, 0.019598110725271456),
    'MAP@1000': (0.141918, 0.01954220396986993),
    'Recall@10': (0.323334, 0.032318759629664004),
    'Recall@50': (0.510666, 0.03934938657717551),
    'Recall@100': (0.6319999999999999, 0.016000000000000014),
    'Recall@200': (0.697334, 0.02037523555692055),
    'Recall@1000': (0.826666, 0.03583883681148148)
}

common_means_dpr = {
    'NDCG@10': (0.335802, 0.03290714657942861),
    'NDCG@50': (0.38111, 0.03947667007233512),
    'NDCG@100': (0.3943420000000001, 0.04061594681895276),
    'NDCG@200': (0.40229400000000004, 0.03900989392449048),
    'NDCG@1000': (0.41261600000000004, 0.03583471478887476),
    'MAP@10': (0.2712, 0.03395155784349226),
    'MAP@50': (0.280862, 0.03597449618827204),
    'MAP@100': (0.282146, 0.036143477751871086),
    'MAP@200': (0.282596, 0.03613593480180083),
    'MAP@1000': (0.28284, 0.03605930614973063),
    'Recall@10': (0.5373340000000001, 0.04663807697579308),
    'Recall@50': (0.738, 0.07028652473981054),
    'Recall@100': (0.8163320000000001, 0.06749830617134031),
    'Recall@200': (0.8716659999999999, 0.05517755181230861),
    'Recall@1000': (0.96, 0.028284271247461894)
}

# Data for "Long Tail" category
long_tail_means_dpr = {
    'NDCG@10': (0.314286, 0.02845762084222784),
    'NDCG@50': (0.37234, 0.022572245789907564),
    'NDCG@100': (0.384038, 0.018643592357697584),
    'NDCG@200': (0.393498, 0.02140022373714816),
    'NDCG@1000': (0.40044599999999997, 0.019927795261894886),
    'MAP@10': (0.25251799999999996, 0.023763607806896674),
    'MAP@50': (0.265366, 0.02192939999179185),
    'MAP@100': (0.266404, 0.021523321862575016),
    'MAP@200': (0.26689999999999997, 0.021634765540675494),
    'MAP@1000': (0.26709, 0.021609748725980128),
    'Recall@10': (0.5119999999999999, 0.05035871324805668),
    'Recall@50': (0.766334, 0.03256406338281515),
    'Recall@100': (0.838334, 0.02403668496278135),
    'Recall@200': (0.9036660000000001, 0.03821594201377221),
    'Recall@1000': (0.96, 0.03162277660168378)
}

long_tail_means_exp = {
    'NDCG@10': (0.34076, 0.060188162291267895),
    'NDCG@50': (0.392416, 0.04772113267725317),
    'NDCG@100': (0.40461600000000003, 0.04913332091361218),
    'NDCG@200': (0.411938, 0.04879765543548175),
    'NDCG@1000': (0.420746, 0.047848079000101976),
    'MAP@10': (0.2755, 0.0652913571615723),
    'MAP@50': (0.28768, 0.06263645998937041),
    'MAP@100': (0.288814, 0.0626948219871466),
    'MAP@200': (0.2892, 0.06267209490674458),
    'MAP@1000': (0.289404, 0.06266256509272501),
    'Recall@10': (0.544, 0.060860496218811753),
    'Recall@50': (0.768, 0.024819347291981736),
    'Recall@100': (0.842, 0.02561249694973139),
    'Recall@200': (0.8940000000000001, 0.04176122603564219),
    'Recall@1000': (0.97, 0.026832815729997458)
}

# Data for "Common" category
common_means_exp = {
    'NDCG@10': (0.34022199999999997, 0.04546419707858041),
    'NDCG@50': (0.40238399999999996, 0.04748089914902622),
    'NDCG@100': (0.41653599999999996, 0.038673284629056254),
    'NDCG@200': (0.42299600000000004, 0.03633395634939855),
    'NDCG@1000': (0.428674, 0.03865927604081588),
    'MAP@10': (0.278476, 0.04571913280017458),
    'MAP@50': (0.29322, 0.04648545880165107),
    'MAP@100': (0.29447999999999996, 0.04579340345508292),
    'MAP@200': (0.29482400000000003, 0.045684739071160295),
    'MAP@1000': (0.294954, 0.04573445335849113),
    'Recall@10': (0.5307999999999999, 0.05544871504372304),
    'Recall@50': (0.7968, 0.06824192259894207),
    'Recall@100': (0.8824, 0.033690354702792934),
    'Recall@200': (0.9272, 0.032486304806795104),
    'Recall@1000': (0.9751999999999998, 0.010007996802557453)
}
# Perform independent t-test
t_values_common, p_values_common = independent_t_test(common_means, long_tail_means)
t_values_common_b25, p_values_common_b25 = independent_t_test(common_means_updated, long_tail_means_updated)

t_values_common_n, p_values_common_n = independent_t_test(long_tail_means, long_tail_means_updated)

t_values_common_dpr, p_values_common_dpr = independent_t_test(common_means_dpr, long_tail_means_dpr)

t_values_common_exp, p_values_common_exp = independent_t_test(common_means_exp, long_tail_means_exp)
t_values_common_exp_c, p_values_common_exp_c = independent_t_test(long_tail_means_exp, long_tail_means_dpr)

t_values_common_exp_cd, p_values_common_exp_cd = independent_t_test(long_tail_means_dpr, long_tail_means_updated)


# Print results for "Common" category
# print("Common Category:")
# print("T-Values:")
# for metric, t_value in t_values_common.items():
#     print(f"{metric}: {t_value}")

# print("\nP-Values:")
# for metric, p_value in p_values_common.items():
#     print(f"{metric}: {p_value}")

print("\nP-Values:")
for metric, p_value in p_values_common.items():
    print(f"{metric}: {p_value}")
